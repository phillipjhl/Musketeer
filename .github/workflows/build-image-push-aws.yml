# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build, Zip, Docker tag and push to AWS

on:
  push:
    tags:
        - "*"
  pull_request:
    branches: [ master ]

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2

    - name: Use Node.js 12.16.1, Build Client
      uses: actions/setup-node@v1
      with:
        node-version: 12.16.1
      env:
        NODE_ENV: production
    - run: npm install
    - run: npm run build:prod
    - run: npm run zip:public

    - name: 'Upload Build Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: Public ZIP File
        path: ./build/public/prod.zip
        retention-days: 30

    - name: Configure AWS credentials
      id: login-aws
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1


    - name: Amazon ECR "Login" Action for GitHub Actions
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1


    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: musketeer
        IMAGE_TAG: ${{ github.ref }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
